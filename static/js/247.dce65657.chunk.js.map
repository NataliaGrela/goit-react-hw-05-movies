{"version":3,"file":"static/js/247.dce65657.chunk.js","mappings":"8MAEaA,EAAG,mCAAG,WAAOC,EAAUC,GAAjB,iFACD,gCACVC,EAAS,CACbC,QAAS,CACPC,cACE,+NALW,kBAUQC,EAAAA,EAAAA,IATT,gCAS6BL,EAAWC,EAAQC,GAV/C,cAUTI,EAVS,OAWPC,EAASD,EAATC,KAXO,kBAiBRA,GAjBQ,wCAmBfC,QAAQC,IAAR,MAIM,IAAIC,MAAM,SAvBD,0DAAH,uD,kHCwDhB,UAnDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,KAAxBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEXC,EAAkBF,EAAQH,GAEhC,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACOtB,EAAAA,EAAAA,GAAIiB,EAAiB,IAD5B,OACVV,EADU,OAEhBa,EAAQb,EAASY,MAFD,2CAAH,qDAKfG,GAED,GAAE,IAEIH,EAAKI,OAAS,GACnB,0BACE,eAAIC,UAAU,OAAd,SACGL,EAAKM,KAAI,SAAAC,GACR,IAAQC,EAAkCD,EAAlCC,aAAcC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UAC5B,OACE,gBAAIL,UAAU,YAAd,WACE,gBAAKA,UAAU,eAAf,UACE,gBACEA,UAAU,WACVM,IAAKd,EAAaW,EAClBI,IAAI,YAGR,iBAAKP,UAAU,YAAf,WACE,iBAAMA,UAAU,YAAhB,SAA6BI,KAC7B,kBAAMJ,UAAU,iBAAhB,wBAA6CK,UAIpD,SAIL,0BACE,mEAGL,C","sources":["api/get.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const get = async (endPoint, params) => {\n  const API_URL = 'https://api.themoviedb.org/3/';\n  const config = {\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ODUwODgyN2YwNWE3NWNlMDkwYzE5OGIzNDZjMzhlYyIsInN1YiI6IjY0OTA2ODcxYzNjODkxMDBjYWRiN2E2YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zspl2sUoDspIgRQ-TfLZNYqaNo_q586p__yDNruaAx8',\n    },\n  };\n\n  try {\n    const response = await axios.get(API_URL + endPoint + params, config);\n    const { data } = response;\n    // if (data.results.length === 0) {\n    //   //   alert(\n    //   //     'Sorry, there are no images matching your search query. Please try again.'\n    //   //   );\n    // }\n    return data;\n  } catch (error) {\n    console.log(error);\n    // alert(\n    //   'Sorry, there was an error. Please try again later.'\n    // );\n    throw new Error('Error');\n  }\n};\n","import PropTypes from 'prop-types';\nimport { get } from 'api/get';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useEndPoints } from 'api/endPoints';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { credits, baseUrlImg } = useEndPoints()\n\n  const endPointCredits = credits(movieId)\n\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      const response = await get(endPointCredits, '');\n      setCast(response.cast);\n    };\n\n    fetchCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return cast.length > 0 ? (\n    <div>\n      <ul className=\"cast\">\n        {cast.map(item => {\n          const { profile_path, name, character } = item;\n          return (\n            <li className=\"cast-item\">\n              <div className=\"cast-wrapper\">\n                <img\n                  className=\"cast-img\"\n                  src={baseUrlImg + profile_path}\n                  alt=\"cast\"\n                />\n              </div>\n              <div className=\"cast-info\">\n                <span className=\"cast-name\">{name}</span>\n                <span className=\"cast-character\">Character: {character}</span>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  ) : (\n    <div>\n      <p>We don't have any cast for this movie.</p>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n"],"names":["get","endPoint","params","config","headers","Authorization","axios","response","data","console","log","Error","movieId","useParams","useEndPoints","credits","baseUrlImg","endPointCredits","useState","cast","setCast","useEffect","fetchCast","length","className","map","item","profile_path","name","character","src","alt"],"sourceRoot":""}