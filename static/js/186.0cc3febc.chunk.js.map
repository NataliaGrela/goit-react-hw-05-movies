{"version":3,"file":"static/js/186.0cc3febc.chunk.js","mappings":"8MAEaA,EAAS,mCAAG,WAAOC,EAAUC,GAAjB,iFACP,gCACVC,EAAS,CACbC,QAAS,CACPC,cACE,+NALiB,kBAUEC,EAAAA,EAAAA,IATT,gCAS6BL,EAAWC,EAAQC,GAVzC,cAUfI,EAVe,OAWbC,EAASD,EAATC,KAXa,kBAiBdA,GAjBc,wCAmBrBC,QAAQC,IAAR,MAIM,IAAIC,MAAM,SAvBK,0DAAH,uD,yGCsCtB,UAnCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAe,iBAAaF,EAAb,YACrB,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKnB,EAAAA,EAAAA,GAAUc,EAAiB,IADhC,OACZP,EADY,OAElBU,EAAWV,EAASa,SAFF,2CAAH,qDAKjBD,GAED,GAAE,IAEIH,EAAQK,OAAS,GACtB,0BACE,wBACGL,EAAQM,KAAI,SAAAC,GACX,IAAQC,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QAChB,OACE,gBAAIC,UAAU,cAAd,WACE,eAAIA,UAAU,gBAAd,SAA+BF,KAC/B,cAAGE,UAAU,iBAAb,SAA+BD,MAGpC,SAIL,0BACE,sEAGL,C","sources":["api/getMovies.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getMovies = async (endPoint, params) => {\n  const API_URL = 'https://api.themoviedb.org/3/';\n  const config = {\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ODUwODgyN2YwNWE3NWNlMDkwYzE5OGIzNDZjMzhlYyIsInN1YiI6IjY0OTA2ODcxYzNjODkxMDBjYWRiN2E2YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.zspl2sUoDspIgRQ-TfLZNYqaNo_q586p__yDNruaAx8',\n    },\n  };\n\n  try {\n    const response = await axios.get(API_URL + endPoint + params, config);\n    const { data } = response;\n    // if (data.results.length === 0) {\n    //   //   alert(\n    //   //     'Sorry, there are no images matching your search query. Please try again.'\n    //   //   );\n    // }\n    return data;\n  } catch (error) {\n    console.log(error);\n    // alert(\n    //   'Sorry, there was an error. Please try again later.'\n    // );\n    throw new Error('Error');\n  }\n};\n","import { getMovies } from 'api/getMovies';\nimport { useParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const endPointReviews = `/movie/${movieId}/reviews`;\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await getMovies(endPointReviews, '');\n      setReviews(response.results);\n    };\n\n    fetchMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return reviews.length > 0 ? (\n    <div>\n      <ul>\n        {reviews.map(item => {\n          const { author, content } = item;\n          return (\n            <li className=\"review-list\">\n              <h4 className=\"review-author\">{author}</h4>\n              <p className=\"review-content\">{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  ) : (\n    <div>\n      <p>We don't have any reviews for this movie.</p>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["getMovies","endPoint","params","config","headers","Authorization","axios","response","data","console","log","Error","movieId","useParams","endPointReviews","useState","reviews","setReviews","useEffect","fetchMovies","results","length","map","item","author","content","className"],"sourceRoot":""}